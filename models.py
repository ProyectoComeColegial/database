from django.db import models
from django.contrib.auth.models import AbstractUser
from django.db.models import Value
from django.db.models.functions import Concat
from django.contrib import admin
# Create your models here.

class Role (models.Model):
    #ID is autogenerated
    AssignedRole = models.CharField(max_length= 25)
    #Possible: assign special permission (ADD, DELETE, UPDATE) to select users.

class User(AbstractUser): 
    Role = models.ForeignKey(Role, on_delete = models.SET_NULL, null = True)

class Volunteer(models.Model):
    #ID is autogenerated 
    FirstName = models.CharField(max_length=200)
    LastName = models.CharField(max_length=200)
    Email = models.CharField(max_length= 200)
    PhoneNumber = models.CharField(max_length= 12)
    Faculty = models.CharField(max_length= 4)
    Major = models.CharField(max_length= 4)


    def full_name(self):
        return self.__str__()

    full_name.short_description = "Full Name"

    def __str__(self):
        return self.FirstName + " " + self.LastName

class Payment(models.Model): #standard class for payments 
    #ID is autogenerated 
    DONATION = 0 
    CUOTA = 1 
    PaymentTypeChoices = [
        (DONATION, "Donation"), 
        (CUOTA, "Cuota"), 
    ]
    PaymentDate = models.DateField(null = False)
    PaymentEvidence = models.ImageField(null = False) #Verify if this field can store image data in MS SQL 
    PaymentType = models.IntegerField(choices = PaymentTypeChoices) 

class Activity (models.Model):
    #ID is autogenerated 
    ActivityDate = models.DateField(null = False)
    ActivityType = models.CharField(max_length= 50) #Subject to choices
    HoursWorked = models.FloatField()

    #def __str__(self):
        #return self.FirstName + " " + self.LastName


class Membership(models.Model):
    #ID is autogenerated 
    MembershipStatus = models.BooleanField(null = True)
    EnrollmentDate = models.DateField(null = False)
    Payment = models.ForeignKey(Payment, on_delete = models.SET_NULL, null = True, blank = True)
    Activity = models.ForeignKey(Activity, on_delete = models.SET_NULL, null = True, blank = True)
    vID = models.ForeignKey(Volunteer, on_delete = models.CASCADE)

class ParticipantStatus(models.Model):
    #ID is autogenerated 
    Status = models.BooleanField()
    PickupDate = models.DateField()
    Assistance = models.BooleanField()

class Participant(models.Model): 
    #ID is autogenerated 
    FirstName = models.CharField(max_length=200)
    LastName = models.CharField(max_length=200)
    Email = models.CharField(max_length= 200)
    PhoneNumber = models.CharField(max_length= 12)
    Faculty = models.CharField(max_length= 4)
    Major = models.CharField(max_length= 4)
    ForeignStudent = models.BooleanField(null = True)
    EnrollmentDate = models.DateField(null = False)
    Status = models.ForeignKey(ParticipantStatus, on_delete = models.SET_NULL, null = True)

    def __str__(self):
        return self.FirstName + " " + self.LastName


class Delivery (models.Model):
    #ID is autogenerated
    DonationDelivered = models.BooleanField()
    DeliveryDate = models.DateTimeField()
    DeliveryPlace = models.CharField(max_length= 100)

class Donation (models.Model):
    #ID is autogenerated 
    DonationType = models.CharField(max_length= 30) #Son dos opciones: Monetaria o Fisica 
    DonationDescription = models.CharField(max_length= 200)
    Payment = models.ForeignKey(Payment, on_delete = models.SET_NULL, null = True)
    Delivery = models.ForeignKey(Delivery, on_delete = models.SET_NULL, null = True)
    
class Donator(models.Model): 
    #ID is autogenerated 
    FirstName = models.CharField(max_length=200)
    LastName = models.CharField(max_length=200)
    Email = models.CharField(max_length= 200)
    PhoneNumber = models.CharField(max_length= 12)
    DonationCount = models.IntegerField()

    








